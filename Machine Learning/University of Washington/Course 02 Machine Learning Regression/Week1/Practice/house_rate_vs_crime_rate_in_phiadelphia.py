# -*- coding: utf-8 -*-
"""House rate Vs. Crime Rate in Phiadelphia.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1dAVo7A9si8CFiUK7wbcE7kpHlVyPIYRo
"""

!pip install turicreate

import turicreate
from turicreate import SFrame

"""# **Load some house value vs. crime rate data**

Dataset is from Philadelphia, PA and includes average house sales price in a number of neighborhoods.  The attributes of each neighborhood we have include the crime rate ('CrimeRate'), miles from Center City ('MilesPhila'), town name ('Name'), and county name ('County').
"""

sales = turicreate.SFrame.read_csv('/content/drive/My Drive/Colab Notebooks/Machine Learning/Course 2 Machine Learning Regression/Week1/Practice/Philadelphia_Crime_Rate_noNA.csv')

sales

"""# **Exploring the data**

The house price in a town is correlated with the crime rate of that town. Low crime towns tend to be associated with higher house prices and vice versa.
"""

turicreate.show(sales['CrimeRate'], sales['HousePrice'])

"""# **Fit the regression model using crime as the feature**"""

crime_model = turicreate.linear_regression.create(sales, target='HousePrice',
                                                  features = ['CrimeRate'],
                                                  validation_set=None,
                                                  verbose=False)

"""# **Let's see what our fit looks like**

Matplotlib is a Python plotting library that is also useful for plotting.  You can install it with:

'pip install matplotlib'
"""

# Commented out IPython magic to ensure Python compatibility.
import matplotlib.pyplot as plt
# %matplotlib inline

"""Orange line is our fitted line('-') and blue dots are our observation"""

plt.plot(sales['CrimeRate'],sales['HousePrice'],'.',
        sales['CrimeRate'],crime_model.predict(sales),'-')

"""# Remove Center City and redo the analysis

Center City is the one observation with an extremely high crime rate, yet house prices are not very low.  This point does not follow the trend of the rest of the data very well.  A question is how much including Center City is influencing our fit on the other datapoints.  Let's remove this datapoint and see what happens.

Center city is in the center so that we have to remove that city that has **MilesPhila == 0** so we are taking all the cities that have > or < 0 MilesPhila
"""

sales_noCC = sales[sales['MilesPhila'] != 0.0]

turicreate.show(sales_noCC['CrimeRate'], sales_noCC['HousePrice'])

"""### **Refit our simple regression model on this modified dataset:** noCC = no Central City"""

crime_model_noCC = turicreate.linear_regression.create(sales_noCC, target='HousePrice',
                                                  features = ['CrimeRate'],
                                                  validation_set=None,
                                                  verbose=False)

"""## **Look at the fit :**"""

plt.plot(sales_noCC['CrimeRate'],sales_noCC['HousePrice'],'.',
        sales_noCC['CrimeRate'],crime_model_noCC.predict(sales_noCC),'-')

"""#** Compare coefficients for full-data fit versus no-Center-City fit**

Visually, the fit seems different, but let's quantify this by examining the estimated coefficients of our original fit and that of the modified dataset with Center City removed.
"""

crime_model.coefficients

crime_model_noCC.coefficients

"""Above: We see that for the "no Center City" version, per unit increase in crime, the predicted decrease in house prices is 2,287.  In contrast, for the original dataset, the drop is only 576 per unit increase in crime.  This is significantly different!

### High leverage points: 
Center City is said to be a "high leverage" point because it is at an extreme x value where there are not other observations.  As a result, recalling the closed-form solution for simple regression, this point has the *potential* to dramatically change the least squares line since the center of x mass is heavily influenced by this one point and the least squares line will try to fit close to that outlying (in x) point.  If a high leverage point follows the trend of the other data, this might not have much effect.  On the other hand, if this point somehow differs, it can be strongly influential in the resulting fit.

### Influential observations:  
An influential observation is one where the removal of the point significantly changes the fit.  As discussed above, high leverage points are good candidates for being influential observations, but need not be.  Other observations that are *not* leverage points can also be influential observations (e.g., strongly outlying in y even if x is a typical value).

### Plotting the two models
Confirm the above calculations by looking at the plots. The orange line is the model trained removing Center City, and the green line is the model trained on all the data. Notice how much steeper the green line is, since the drop in value is much higher according to this model.
"""

plt.plot(sales_noCC['CrimeRate'], sales_noCC['HousePrice'], '.',
         sales_noCC['CrimeRate'], crime_model.predict(sales_noCC), '-',
         sales_noCC['CrimeRate'], crime_model_noCC.predict(sales_noCC), '-')

"""# **Remove high-value outlier neighborhoods and redo analysis**

Based on the discussion above, a question is whether the outlying high-value towns are strongly influencing the fit.  Let's remove them and see what happens.
"""

sales_nohighend = sales_noCC[sales_noCC['HousePrice'] < 350000]
crime_model_nohighend = turicreate.linear_regression.create(sales_nohighend, target='HousePrice',
                                                            features=['CrimeRate'],
                                                            validation_set=None,
                                                            verbose=False)

"""# Do the coefficient change much?"""

crime_model_noCC.coefficients

crime_model_nohighend.coefficients

"""Above: We see that removing the outlying high-value neighborhoods has *some* effect on the fit, but not nearly as much as our high-leverage Center City datapoint.

**high leverage points can be much more likely to be influential observations for just small deviations from the data set. Then outline observations that are within our x, our typical x range.**
"""

